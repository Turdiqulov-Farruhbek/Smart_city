// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: building_permit.proto

package city_planning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuildingPermit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermitId        string `protobuf:"bytes,1,opt,name=PermitId,proto3" json:"PermitId,omitempty"`
	ZoneId          string `protobuf:"bytes,2,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	PermitType      string `protobuf:"bytes,3,opt,name=PermitType,proto3" json:"PermitType,omitempty"`
	ApplicationName string `protobuf:"bytes,4,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	Status          string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	CreatedAt       string `protobuf:"bytes,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	ConfirmedAt     string `protobuf:"bytes,7,opt,name=ConfirmedAt,proto3" json:"ConfirmedAt,omitempty"`
	DeletedAt       string `protobuf:"bytes,8,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *BuildingPermit) Reset() {
	*x = BuildingPermit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_building_permit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingPermit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingPermit) ProtoMessage() {}

func (x *BuildingPermit) ProtoReflect() protoreflect.Message {
	mi := &file_building_permit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingPermit.ProtoReflect.Descriptor instead.
func (*BuildingPermit) Descriptor() ([]byte, []int) {
	return file_building_permit_proto_rawDescGZIP(), []int{0}
}

func (x *BuildingPermit) GetPermitId() string {
	if x != nil {
		return x.PermitId
	}
	return ""
}

func (x *BuildingPermit) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *BuildingPermit) GetPermitType() string {
	if x != nil {
		return x.PermitType
	}
	return ""
}

func (x *BuildingPermit) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *BuildingPermit) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BuildingPermit) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BuildingPermit) GetConfirmedAt() string {
	if x != nil {
		return x.ConfirmedAt
	}
	return ""
}

func (x *BuildingPermit) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type BuildingPermitCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermitId        string `protobuf:"bytes,1,opt,name=PermitId,proto3" json:"PermitId,omitempty"`
	ZoneId          string `protobuf:"bytes,2,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	PermitType      string `protobuf:"bytes,3,opt,name=PermitType,proto3" json:"PermitType,omitempty"`
	ApplicationName string `protobuf:"bytes,4,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	Status          string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *BuildingPermitCreate) Reset() {
	*x = BuildingPermitCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_building_permit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingPermitCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingPermitCreate) ProtoMessage() {}

func (x *BuildingPermitCreate) ProtoReflect() protoreflect.Message {
	mi := &file_building_permit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingPermitCreate.ProtoReflect.Descriptor instead.
func (*BuildingPermitCreate) Descriptor() ([]byte, []int) {
	return file_building_permit_proto_rawDescGZIP(), []int{1}
}

func (x *BuildingPermitCreate) GetPermitId() string {
	if x != nil {
		return x.PermitId
	}
	return ""
}

func (x *BuildingPermitCreate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *BuildingPermitCreate) GetPermitType() string {
	if x != nil {
		return x.PermitType
	}
	return ""
}

func (x *BuildingPermitCreate) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *BuildingPermitCreate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BuildingPermitUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId          string `protobuf:"bytes,1,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	PermitType      string `protobuf:"bytes,2,opt,name=PermitType,proto3" json:"PermitType,omitempty"`
	ApplicationName string `protobuf:"bytes,3,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	Status          string `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *BuildingPermitUpdate) Reset() {
	*x = BuildingPermitUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_building_permit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingPermitUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingPermitUpdate) ProtoMessage() {}

func (x *BuildingPermitUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_building_permit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingPermitUpdate.ProtoReflect.Descriptor instead.
func (*BuildingPermitUpdate) Descriptor() ([]byte, []int) {
	return file_building_permit_proto_rawDescGZIP(), []int{2}
}

func (x *BuildingPermitUpdate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *BuildingPermitUpdate) GetPermitType() string {
	if x != nil {
		return x.PermitType
	}
	return ""
}

func (x *BuildingPermitUpdate) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *BuildingPermitUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BuildingPermitList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildingPermits []*BuildingPermit `protobuf:"bytes,1,rep,name=BuildingPermits,proto3" json:"BuildingPermits,omitempty"`
}

func (x *BuildingPermitList) Reset() {
	*x = BuildingPermitList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_building_permit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingPermitList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingPermitList) ProtoMessage() {}

func (x *BuildingPermitList) ProtoReflect() protoreflect.Message {
	mi := &file_building_permit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingPermitList.ProtoReflect.Descriptor instead.
func (*BuildingPermitList) Descriptor() ([]byte, []int) {
	return file_building_permit_proto_rawDescGZIP(), []int{3}
}

func (x *BuildingPermitList) GetBuildingPermits() []*BuildingPermit {
	if x != nil {
		return x.BuildingPermits
	}
	return nil
}

type BuildingPermitFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermitId        string `protobuf:"bytes,1,opt,name=PermitId,proto3" json:"PermitId,omitempty"`
	ZoneId          string `protobuf:"bytes,2,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	PermitType      string `protobuf:"bytes,3,opt,name=PermitType,proto3" json:"PermitType,omitempty"`
	ApplicationName string `protobuf:"bytes,4,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	Status          string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *BuildingPermitFilter) Reset() {
	*x = BuildingPermitFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_building_permit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildingPermitFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingPermitFilter) ProtoMessage() {}

func (x *BuildingPermitFilter) ProtoReflect() protoreflect.Message {
	mi := &file_building_permit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildingPermitFilter.ProtoReflect.Descriptor instead.
func (*BuildingPermitFilter) Descriptor() ([]byte, []int) {
	return file_building_permit_proto_rawDescGZIP(), []int{4}
}

func (x *BuildingPermitFilter) GetPermitId() string {
	if x != nil {
		return x.PermitId
	}
	return ""
}

func (x *BuildingPermitFilter) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *BuildingPermitFilter) GetPermitType() string {
	if x != nil {
		return x.PermitType
	}
	return ""
}

func (x *BuildingPermitFilter) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *BuildingPermitFilter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_building_permit_proto protoreflect.FileDescriptor

var file_building_permit_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x14,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x14, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5d, 0x0a,
	0x12, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x52, 0x0f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x73, 0x22, 0xac, 0x01, 0x0a,
	0x14, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xe5, 0x02, 0x0a, 0x15,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x12, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12,
	0x52, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x13, 0x2e, 0x63,
	0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_building_permit_proto_rawDescOnce sync.Once
	file_building_permit_proto_rawDescData = file_building_permit_proto_rawDesc
)

func file_building_permit_proto_rawDescGZIP() []byte {
	file_building_permit_proto_rawDescOnce.Do(func() {
		file_building_permit_proto_rawDescData = protoimpl.X.CompressGZIP(file_building_permit_proto_rawDescData)
	})
	return file_building_permit_proto_rawDescData
}

var file_building_permit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_building_permit_proto_goTypes = []interface{}{
	(*BuildingPermit)(nil),       // 0: city_planning.BuildingPermit
	(*BuildingPermitCreate)(nil), // 1: city_planning.BuildingPermitCreate
	(*BuildingPermitUpdate)(nil), // 2: city_planning.BuildingPermitUpdate
	(*BuildingPermitList)(nil),   // 3: city_planning.BuildingPermitList
	(*BuildingPermitFilter)(nil), // 4: city_planning.BuildingPermitFilter
	(*ById)(nil),                 // 5: city_planning.ById
	(*Void)(nil),                 // 6: city_planning.Void
}
var file_building_permit_proto_depIdxs = []int32{
	0, // 0: city_planning.BuildingPermitList.BuildingPermits:type_name -> city_planning.BuildingPermit
	1, // 1: city_planning.BuildingPermitService.CreateBuildingPermit:input_type -> city_planning.BuildingPermitCreate
	5, // 2: city_planning.BuildingPermitService.DeleteBuildingPermit:input_type -> city_planning.ById
	4, // 3: city_planning.BuildingPermitService.GetBuildingPermits:input_type -> city_planning.BuildingPermitFilter
	1, // 4: city_planning.BuildingPermitService.UpdateBuildingPermit:input_type -> city_planning.BuildingPermitCreate
	6, // 5: city_planning.BuildingPermitService.CreateBuildingPermit:output_type -> city_planning.Void
	6, // 6: city_planning.BuildingPermitService.DeleteBuildingPermit:output_type -> city_planning.Void
	4, // 7: city_planning.BuildingPermitService.GetBuildingPermits:output_type -> city_planning.BuildingPermitFilter
	6, // 8: city_planning.BuildingPermitService.UpdateBuildingPermit:output_type -> city_planning.Void
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_building_permit_proto_init() }
func file_building_permit_proto_init() {
	if File_building_permit_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_building_permit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingPermit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_building_permit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingPermitCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_building_permit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingPermitUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_building_permit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingPermitList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_building_permit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildingPermitFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_building_permit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_building_permit_proto_goTypes,
		DependencyIndexes: file_building_permit_proto_depIdxs,
		MessageInfos:      file_building_permit_proto_msgTypes,
	}.Build()
	File_building_permit_proto = out.File
	file_building_permit_proto_rawDesc = nil
	file_building_permit_proto_goTypes = nil
	file_building_permit_proto_depIdxs = nil
}
