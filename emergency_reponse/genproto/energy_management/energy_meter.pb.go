// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: energy_meter.proto

package energy_management

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnergyMeterCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId    string `protobuf:"bytes,1,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	BuildingId string `protobuf:"bytes,2,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	MeterType  string `protobuf:"bytes,3,opt,name=MeterType,proto3" json:"MeterType,omitempty"`
}

func (x *EnergyMeterCreate) Reset() {
	*x = EnergyMeterCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_energy_meter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyMeterCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyMeterCreate) ProtoMessage() {}

func (x *EnergyMeterCreate) ProtoReflect() protoreflect.Message {
	mi := &file_energy_meter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyMeterCreate.ProtoReflect.Descriptor instead.
func (*EnergyMeterCreate) Descriptor() ([]byte, []int) {
	return file_energy_meter_proto_rawDescGZIP(), []int{0}
}

func (x *EnergyMeterCreate) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *EnergyMeterCreate) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyMeterCreate) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

type EnergyMeterUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildingId string `protobuf:"bytes,1,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	MeterType  string `protobuf:"bytes,2,opt,name=MeterType,proto3" json:"MeterType,omitempty"`
}

func (x *EnergyMeterUpdate) Reset() {
	*x = EnergyMeterUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_energy_meter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyMeterUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyMeterUpdate) ProtoMessage() {}

func (x *EnergyMeterUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_energy_meter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyMeterUpdate.ProtoReflect.Descriptor instead.
func (*EnergyMeterUpdate) Descriptor() ([]byte, []int) {
	return file_energy_meter_proto_rawDescGZIP(), []int{1}
}

func (x *EnergyMeterUpdate) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyMeterUpdate) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

type EnergyMeter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId    string `protobuf:"bytes,1,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	BuildingId string `protobuf:"bytes,2,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	MeterType  string `protobuf:"bytes,3,opt,name=MeterType,proto3" json:"MeterType,omitempty"`
	CreatedAt  string `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  string `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt  string `protobuf:"bytes,6,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *EnergyMeter) Reset() {
	*x = EnergyMeter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_energy_meter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyMeter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyMeter) ProtoMessage() {}

func (x *EnergyMeter) ProtoReflect() protoreflect.Message {
	mi := &file_energy_meter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyMeter.ProtoReflect.Descriptor instead.
func (*EnergyMeter) Descriptor() ([]byte, []int) {
	return file_energy_meter_proto_rawDescGZIP(), []int{2}
}

func (x *EnergyMeter) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *EnergyMeter) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyMeter) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

func (x *EnergyMeter) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EnergyMeter) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *EnergyMeter) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

var File_energy_meter_proto protoreflect.FileDescriptor

var file_energy_meter_proto_rawDesc = []byte{
	0x0a, 0x12, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x11, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x51, 0x0a, 0x11, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xe5, 0x02, 0x0a, 0x13, 0x45, 0x6e, 0x65, 0x6e,
	0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x1e, 0x2e,
	0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00, 0x42,
	0x1d, 0x5a, 0x1b, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_energy_meter_proto_rawDescOnce sync.Once
	file_energy_meter_proto_rawDescData = file_energy_meter_proto_rawDesc
)

func file_energy_meter_proto_rawDescGZIP() []byte {
	file_energy_meter_proto_rawDescOnce.Do(func() {
		file_energy_meter_proto_rawDescData = protoimpl.X.CompressGZIP(file_energy_meter_proto_rawDescData)
	})
	return file_energy_meter_proto_rawDescData
}

var file_energy_meter_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_energy_meter_proto_goTypes = []interface{}{
	(*EnergyMeterCreate)(nil), // 0: energy_management.EnergyMeterCreate
	(*EnergyMeterUpdate)(nil), // 1: energy_management.EnergyMeterUpdate
	(*EnergyMeter)(nil),       // 2: energy_management.EnergyMeter
	(*ById)(nil),              // 3: energy_management.ById
	(*Void)(nil),              // 4: energy_management.Void
}
var file_energy_meter_proto_depIdxs = []int32{
	0, // 0: energy_management.EnenrgyMeterService.CreateEnergyMeter:input_type -> energy_management.EnergyMeterCreate
	0, // 1: energy_management.EnenrgyMeterService.UpdateEnergyMeter:input_type -> energy_management.EnergyMeterCreate
	3, // 2: energy_management.EnenrgyMeterService.DeleteEnergyMeter:input_type -> energy_management.ById
	3, // 3: energy_management.EnenrgyMeterService.GetEnergyMeter:input_type -> energy_management.ById
	2, // 4: energy_management.EnenrgyMeterService.CreateEnergyMeter:output_type -> energy_management.EnergyMeter
	2, // 5: energy_management.EnenrgyMeterService.UpdateEnergyMeter:output_type -> energy_management.EnergyMeter
	4, // 6: energy_management.EnenrgyMeterService.DeleteEnergyMeter:output_type -> energy_management.Void
	2, // 7: energy_management.EnenrgyMeterService.GetEnergyMeter:output_type -> energy_management.EnergyMeter
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_energy_meter_proto_init() }
func file_energy_meter_proto_init() {
	if File_energy_meter_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_energy_meter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyMeterCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_energy_meter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyMeterUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_energy_meter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyMeter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_energy_meter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_energy_meter_proto_goTypes,
		DependencyIndexes: file_energy_meter_proto_depIdxs,
		MessageInfos:      file_energy_meter_proto_msgTypes,
	}.Build()
	File_energy_meter_proto = out.File
	file_energy_meter_proto_rawDesc = nil
	file_energy_meter_proto_goTypes = nil
	file_energy_meter_proto_depIdxs = nil
}
