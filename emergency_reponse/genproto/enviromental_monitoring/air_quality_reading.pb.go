// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: air_quality_reading.proto

package enviromental_monitoring

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AirQualityReadingCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadingId  string  `protobuf:"bytes,1,opt,name=ReadingId,proto3" json:"ReadingId,omitempty"`
	StationId  string  `protobuf:"bytes,2,opt,name=StationId,proto3" json:"StationId,omitempty"`
	Pm25Level  float32 `protobuf:"fixed32,3,opt,name=pm25_level,json=pm25Level,proto3" json:"pm25_level,omitempty"`
	Pm10Level  float32 `protobuf:"fixed32,4,opt,name=pm10_level,json=pm10Level,proto3" json:"pm10_level,omitempty"`
	OzoneLevel float32 `protobuf:"fixed32,5,opt,name=ozone_level,json=ozoneLevel,proto3" json:"ozone_level,omitempty"`
	Time       string  `protobuf:"bytes,6,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *AirQualityReadingCreate) Reset() {
	*x = AirQualityReadingCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_air_quality_reading_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirQualityReadingCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirQualityReadingCreate) ProtoMessage() {}

func (x *AirQualityReadingCreate) ProtoReflect() protoreflect.Message {
	mi := &file_air_quality_reading_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirQualityReadingCreate.ProtoReflect.Descriptor instead.
func (*AirQualityReadingCreate) Descriptor() ([]byte, []int) {
	return file_air_quality_reading_proto_rawDescGZIP(), []int{0}
}

func (x *AirQualityReadingCreate) GetReadingId() string {
	if x != nil {
		return x.ReadingId
	}
	return ""
}

func (x *AirQualityReadingCreate) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *AirQualityReadingCreate) GetPm25Level() float32 {
	if x != nil {
		return x.Pm25Level
	}
	return 0
}

func (x *AirQualityReadingCreate) GetPm10Level() float32 {
	if x != nil {
		return x.Pm10Level
	}
	return 0
}

func (x *AirQualityReadingCreate) GetOzoneLevel() float32 {
	if x != nil {
		return x.OzoneLevel
	}
	return 0
}

func (x *AirQualityReadingCreate) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type AirQualityReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadingId  string   `protobuf:"bytes,1,opt,name=ReadingId,proto3" json:"ReadingId,omitempty"`
	StationId  *Station `protobuf:"bytes,2,opt,name=StationId,proto3" json:"StationId,omitempty"`
	Pm25Level  float32  `protobuf:"fixed32,3,opt,name=pm25_level,json=pm25Level,proto3" json:"pm25_level,omitempty"`
	Pm10Level  float32  `protobuf:"fixed32,4,opt,name=pm10_level,json=pm10Level,proto3" json:"pm10_level,omitempty"`
	OzoneLevel float32  `protobuf:"fixed32,5,opt,name=ozone_level,json=ozoneLevel,proto3" json:"ozone_level,omitempty"`
	Time       string   `protobuf:"bytes,6,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *AirQualityReading) Reset() {
	*x = AirQualityReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_air_quality_reading_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirQualityReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirQualityReading) ProtoMessage() {}

func (x *AirQualityReading) ProtoReflect() protoreflect.Message {
	mi := &file_air_quality_reading_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirQualityReading.ProtoReflect.Descriptor instead.
func (*AirQualityReading) Descriptor() ([]byte, []int) {
	return file_air_quality_reading_proto_rawDescGZIP(), []int{1}
}

func (x *AirQualityReading) GetReadingId() string {
	if x != nil {
		return x.ReadingId
	}
	return ""
}

func (x *AirQualityReading) GetStationId() *Station {
	if x != nil {
		return x.StationId
	}
	return nil
}

func (x *AirQualityReading) GetPm25Level() float32 {
	if x != nil {
		return x.Pm25Level
	}
	return 0
}

func (x *AirQualityReading) GetPm10Level() float32 {
	if x != nil {
		return x.Pm10Level
	}
	return 0
}

func (x *AirQualityReading) GetOzoneLevel() float32 {
	if x != nil {
		return x.OzoneLevel
	}
	return 0
}

func (x *AirQualityReading) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type AirQualityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirQualityReadings []*AirQualityReading `protobuf:"bytes,1,rep,name=AirQualityReadings,proto3" json:"AirQualityReadings,omitempty"`
}

func (x *AirQualityList) Reset() {
	*x = AirQualityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_air_quality_reading_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirQualityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirQualityList) ProtoMessage() {}

func (x *AirQualityList) ProtoReflect() protoreflect.Message {
	mi := &file_air_quality_reading_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirQualityList.ProtoReflect.Descriptor instead.
func (*AirQualityList) Descriptor() ([]byte, []int) {
	return file_air_quality_reading_proto_rawDescGZIP(), []int{2}
}

func (x *AirQualityList) GetAirQualityReadings() []*AirQualityReading {
	if x != nil {
		return x.AirQualityReadings
	}
	return nil
}

type AirQualityFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StationId string `protobuf:"bytes,1,opt,name=StationId,proto3" json:"StationId,omitempty"`
	Time      string `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *AirQualityFilter) Reset() {
	*x = AirQualityFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_air_quality_reading_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AirQualityFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AirQualityFilter) ProtoMessage() {}

func (x *AirQualityFilter) ProtoReflect() protoreflect.Message {
	mi := &file_air_quality_reading_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AirQualityFilter.ProtoReflect.Descriptor instead.
func (*AirQualityFilter) Descriptor() ([]byte, []int) {
	return file_air_quality_reading_proto_rawDescGZIP(), []int{3}
}

func (x *AirQualityFilter) GetStationId() string {
	if x != nil {
		return x.StationId
	}
	return ""
}

func (x *AirQualityFilter) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

var File_air_quality_reading_proto protoreflect.FileDescriptor

var file_air_quality_reading_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x69, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x61, 0x69, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x01,
	0x0a, 0x17, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6d, 0x32, 0x35, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6d, 0x32, 0x35, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6d, 0x31, 0x30, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x6d, 0x31, 0x30, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x11, 0x41, 0x69, 0x72,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x6d, 0x32, 0x35, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x70, 0x6d, 0x32, 0x35, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x6d, 0x31, 0x30, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x70, 0x6d, 0x31, 0x30, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x6f, 0x7a, 0x6f, 0x6e, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x6c, 0x0a, 0x0e, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x5a, 0x0a, 0x12, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x41, 0x69, 0x72, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x44, 0x0a,
	0x10, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x32, 0xdc, 0x02, 0x0a, 0x18, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x2e, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x1d, 0x2e,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x6d,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x69, 0x74, 0x79, 0x57, 0x69, 0x64, 0x65, 0x41, 0x69, 0x72,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x29, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x27, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x69, 0x72,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x69, 0x72, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x2a, 0x2e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x41,
	0x69, 0x72, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_air_quality_reading_proto_rawDescOnce sync.Once
	file_air_quality_reading_proto_rawDescData = file_air_quality_reading_proto_rawDesc
)

func file_air_quality_reading_proto_rawDescGZIP() []byte {
	file_air_quality_reading_proto_rawDescOnce.Do(func() {
		file_air_quality_reading_proto_rawDescData = protoimpl.X.CompressGZIP(file_air_quality_reading_proto_rawDescData)
	})
	return file_air_quality_reading_proto_rawDescData
}

var file_air_quality_reading_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_air_quality_reading_proto_goTypes = []interface{}{
	(*AirQualityReadingCreate)(nil), // 0: enviromental_monitoring.AirQualityReadingCreate
	(*AirQualityReading)(nil),       // 1: enviromental_monitoring.AirQualityReading
	(*AirQualityList)(nil),          // 2: enviromental_monitoring.AirQualityList
	(*AirQualityFilter)(nil),        // 3: enviromental_monitoring.AirQualityFilter
	(*Station)(nil),                 // 4: enviromental_monitoring.Station
	(*ById)(nil),                    // 5: enviromental_monitoring.ById
	(*Void)(nil),                    // 6: enviromental_monitoring.Void
}
var file_air_quality_reading_proto_depIdxs = []int32{
	4, // 0: enviromental_monitoring.AirQualityReading.StationId:type_name -> enviromental_monitoring.Station
	1, // 1: enviromental_monitoring.AirQualityList.AirQualityReadings:type_name -> enviromental_monitoring.AirQualityReading
	0, // 2: enviromental_monitoring.AirQualityReadingService.CreateAirQualityReading:input_type -> enviromental_monitoring.AirQualityReadingCreate
	3, // 3: enviromental_monitoring.AirQualityReadingService.GetCityWideAirQuality:input_type -> enviromental_monitoring.AirQualityFilter
	5, // 4: enviromental_monitoring.AirQualityReadingService.GetCurrentAirQuality:input_type -> enviromental_monitoring.ById
	6, // 5: enviromental_monitoring.AirQualityReadingService.CreateAirQualityReading:output_type -> enviromental_monitoring.Void
	2, // 6: enviromental_monitoring.AirQualityReadingService.GetCityWideAirQuality:output_type -> enviromental_monitoring.AirQualityList
	1, // 7: enviromental_monitoring.AirQualityReadingService.GetCurrentAirQuality:output_type -> enviromental_monitoring.AirQualityReading
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_air_quality_reading_proto_init() }
func file_air_quality_reading_proto_init() {
	if File_air_quality_reading_proto != nil {
		return
	}
	file_common_proto_init()
	file_air_quality_station_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_air_quality_reading_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirQualityReadingCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_air_quality_reading_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirQualityReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_air_quality_reading_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirQualityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_air_quality_reading_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AirQualityFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_air_quality_reading_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_air_quality_reading_proto_goTypes,
		DependencyIndexes: file_air_quality_reading_proto_depIdxs,
		MessageInfos:      file_air_quality_reading_proto_msgTypes,
	}.Build()
	File_air_quality_reading_proto = out.File
	file_air_quality_reading_proto_rawDesc = nil
	file_air_quality_reading_proto_goTypes = nil
	file_air_quality_reading_proto_depIdxs = nil
}
