// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: planning_proposal.proto

package city_planning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanningProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId   string `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	ZoneId       string `protobuf:"bytes,2,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	ProposalType string `protobuf:"bytes,3,opt,name=ProposalType,proto3" json:"ProposalType,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Status       string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	SubmittedAt  string `protobuf:"bytes,6,opt,name=SubmittedAt,proto3" json:"SubmittedAt,omitempty"`
	UpdatedAt    string `protobuf:"bytes,7,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt    string `protobuf:"bytes,8,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *PlanningProposal) Reset() {
	*x = PlanningProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planning_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanningProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanningProposal) ProtoMessage() {}

func (x *PlanningProposal) ProtoReflect() protoreflect.Message {
	mi := &file_planning_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanningProposal.ProtoReflect.Descriptor instead.
func (*PlanningProposal) Descriptor() ([]byte, []int) {
	return file_planning_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *PlanningProposal) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *PlanningProposal) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *PlanningProposal) GetProposalType() string {
	if x != nil {
		return x.ProposalType
	}
	return ""
}

func (x *PlanningProposal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlanningProposal) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlanningProposal) GetSubmittedAt() string {
	if x != nil {
		return x.SubmittedAt
	}
	return ""
}

func (x *PlanningProposal) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PlanningProposal) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type PlanningProposalCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId   string `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	ZoneId       string `protobuf:"bytes,2,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	ProposalType string `protobuf:"bytes,3,opt,name=ProposalType,proto3" json:"ProposalType,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Status       string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *PlanningProposalCreate) Reset() {
	*x = PlanningProposalCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planning_proposal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanningProposalCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanningProposalCreate) ProtoMessage() {}

func (x *PlanningProposalCreate) ProtoReflect() protoreflect.Message {
	mi := &file_planning_proposal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanningProposalCreate.ProtoReflect.Descriptor instead.
func (*PlanningProposalCreate) Descriptor() ([]byte, []int) {
	return file_planning_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *PlanningProposalCreate) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *PlanningProposalCreate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *PlanningProposalCreate) GetProposalType() string {
	if x != nil {
		return x.ProposalType
	}
	return ""
}

func (x *PlanningProposalCreate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlanningProposalCreate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PlanningProposalUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId       string `protobuf:"bytes,1,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	ProposalType string `protobuf:"bytes,2,opt,name=ProposalType,proto3" json:"ProposalType,omitempty"`
	Description  string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Status       string `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *PlanningProposalUpdate) Reset() {
	*x = PlanningProposalUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planning_proposal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanningProposalUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanningProposalUpdate) ProtoMessage() {}

func (x *PlanningProposalUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_planning_proposal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanningProposalUpdate.ProtoReflect.Descriptor instead.
func (*PlanningProposalUpdate) Descriptor() ([]byte, []int) {
	return file_planning_proposal_proto_rawDescGZIP(), []int{2}
}

func (x *PlanningProposalUpdate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *PlanningProposalUpdate) GetProposalType() string {
	if x != nil {
		return x.ProposalType
	}
	return ""
}

func (x *PlanningProposalUpdate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlanningProposalUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PlanningProposalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanningProposal []*PlanningProposal `protobuf:"bytes,1,rep,name=PlanningProposal,proto3" json:"PlanningProposal,omitempty"`
}

func (x *PlanningProposalList) Reset() {
	*x = PlanningProposalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planning_proposal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanningProposalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanningProposalList) ProtoMessage() {}

func (x *PlanningProposalList) ProtoReflect() protoreflect.Message {
	mi := &file_planning_proposal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanningProposalList.ProtoReflect.Descriptor instead.
func (*PlanningProposalList) Descriptor() ([]byte, []int) {
	return file_planning_proposal_proto_rawDescGZIP(), []int{3}
}

func (x *PlanningProposalList) GetPlanningProposal() []*PlanningProposal {
	if x != nil {
		return x.PlanningProposal
	}
	return nil
}

type PlanningProposalFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId   string `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	ZoneId       string `protobuf:"bytes,2,opt,name=ZoneId,proto3" json:"ZoneId,omitempty"`
	ProposalType string `protobuf:"bytes,3,opt,name=ProposalType,proto3" json:"ProposalType,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Status       string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *PlanningProposalFilter) Reset() {
	*x = PlanningProposalFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_planning_proposal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanningProposalFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanningProposalFilter) ProtoMessage() {}

func (x *PlanningProposalFilter) ProtoReflect() protoreflect.Message {
	mi := &file_planning_proposal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanningProposalFilter.ProtoReflect.Descriptor instead.
func (*PlanningProposalFilter) Descriptor() ([]byte, []int) {
	return file_planning_proposal_proto_rawDescGZIP(), []int{4}
}

func (x *PlanningProposalFilter) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *PlanningProposalFilter) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *PlanningProposalFilter) GetProposalType() string {
	if x != nil {
		return x.ProposalType
	}
	return ""
}

func (x *PlanningProposalFilter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlanningProposalFilter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_planning_proposal_proto protoreflect.FileDescriptor

var file_planning_proposal_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x02, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xae, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x5a,
	0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x63, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x10, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xed, 0x02, 0x0a, 0x17, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x25,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x62, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x54,
	0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a,
	0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x13,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x42,
	0x79, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x42, 0x19, 0x5a, 0x17, 0x2f, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_planning_proposal_proto_rawDescOnce sync.Once
	file_planning_proposal_proto_rawDescData = file_planning_proposal_proto_rawDesc
)

func file_planning_proposal_proto_rawDescGZIP() []byte {
	file_planning_proposal_proto_rawDescOnce.Do(func() {
		file_planning_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_planning_proposal_proto_rawDescData)
	})
	return file_planning_proposal_proto_rawDescData
}

var file_planning_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_planning_proposal_proto_goTypes = []any{
	(*PlanningProposal)(nil),       // 0: city_planning.PlanningProposal
	(*PlanningProposalCreate)(nil), // 1: city_planning.PlanningProposalCreate
	(*PlanningProposalUpdate)(nil), // 2: city_planning.PlanningProposalUpdate
	(*PlanningProposalList)(nil),   // 3: city_planning.PlanningProposalList
	(*PlanningProposalFilter)(nil), // 4: city_planning.PlanningProposalFilter
	(*ById)(nil),                   // 5: city_planning.ById
	(*Void)(nil),                   // 6: city_planning.Void
}
var file_planning_proposal_proto_depIdxs = []int32{
	0, // 0: city_planning.PlanningProposalList.PlanningProposal:type_name -> city_planning.PlanningProposal
	1, // 1: city_planning.PlanningProposalService.CreatePlanningProposal:input_type -> city_planning.PlanningProposalCreate
	4, // 2: city_planning.PlanningProposalService.GetPlanningProposals:input_type -> city_planning.PlanningProposalFilter
	1, // 3: city_planning.PlanningProposalService.UpdatePlanningProposal:input_type -> city_planning.PlanningProposalCreate
	5, // 4: city_planning.PlanningProposalService.DeletePlanningProposal:input_type -> city_planning.ById
	6, // 5: city_planning.PlanningProposalService.CreatePlanningProposal:output_type -> city_planning.Void
	3, // 6: city_planning.PlanningProposalService.GetPlanningProposals:output_type -> city_planning.PlanningProposalList
	6, // 7: city_planning.PlanningProposalService.UpdatePlanningProposal:output_type -> city_planning.Void
	6, // 8: city_planning.PlanningProposalService.DeletePlanningProposal:output_type -> city_planning.Void
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_planning_proposal_proto_init() }
func file_planning_proposal_proto_init() {
	if File_planning_proposal_proto != nil {
		return
	}
	file_common3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_planning_proposal_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PlanningProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planning_proposal_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PlanningProposalCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planning_proposal_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PlanningProposalUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planning_proposal_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PlanningProposalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_planning_proposal_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PlanningProposalFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_planning_proposal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_planning_proposal_proto_goTypes,
		DependencyIndexes: file_planning_proposal_proto_depIdxs,
		MessageInfos:      file_planning_proposal_proto_msgTypes,
	}.Build()
	File_planning_proposal_proto = out.File
	file_planning_proposal_proto_rawDesc = nil
	file_planning_proposal_proto_goTypes = nil
	file_planning_proposal_proto_depIdxs = nil
}
