// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: meter_reading.proto

package energy_management

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MeterReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadingId    string  `protobuf:"bytes,1,opt,name=ReadingId,proto3" json:"ReadingId,omitempty"`
	MeterId      string  `protobuf:"bytes,2,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	ReadingValue float32 `protobuf:"fixed32,3,opt,name=ReadingValue,proto3" json:"ReadingValue,omitempty"`
	Time         string  `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *MeterReading) Reset() {
	*x = MeterReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meter_reading_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterReading) ProtoMessage() {}

func (x *MeterReading) ProtoReflect() protoreflect.Message {
	mi := &file_meter_reading_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterReading.ProtoReflect.Descriptor instead.
func (*MeterReading) Descriptor() ([]byte, []int) {
	return file_meter_reading_proto_rawDescGZIP(), []int{0}
}

func (x *MeterReading) GetReadingId() string {
	if x != nil {
		return x.ReadingId
	}
	return ""
}

func (x *MeterReading) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *MeterReading) GetReadingValue() float32 {
	if x != nil {
		return x.ReadingValue
	}
	return 0
}

func (x *MeterReading) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type MeterReadingUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId      string  `protobuf:"bytes,1,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	ReadingValue float32 `protobuf:"fixed32,2,opt,name=ReadingValue,proto3" json:"ReadingValue,omitempty"`
	Time         string  `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *MeterReadingUpdate) Reset() {
	*x = MeterReadingUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meter_reading_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeterReadingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeterReadingUpdate) ProtoMessage() {}

func (x *MeterReadingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_meter_reading_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeterReadingUpdate.ProtoReflect.Descriptor instead.
func (*MeterReadingUpdate) Descriptor() ([]byte, []int) {
	return file_meter_reading_proto_rawDescGZIP(), []int{1}
}

func (x *MeterReadingUpdate) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *MeterReadingUpdate) GetReadingValue() float32 {
	if x != nil {
		return x.ReadingValue
	}
	return 0
}

func (x *MeterReadingUpdate) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type EnergyReportBuilding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildingId  string  `protobuf:"bytes,1,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	Time        string  `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	EnergyValue float32 `protobuf:"fixed32,3,opt,name=EnergyValue,proto3" json:"EnergyValue,omitempty"`
}

func (x *EnergyReportBuilding) Reset() {
	*x = EnergyReportBuilding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meter_reading_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyReportBuilding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyReportBuilding) ProtoMessage() {}

func (x *EnergyReportBuilding) ProtoReflect() protoreflect.Message {
	mi := &file_meter_reading_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyReportBuilding.ProtoReflect.Descriptor instead.
func (*EnergyReportBuilding) Descriptor() ([]byte, []int) {
	return file_meter_reading_proto_rawDescGZIP(), []int{2}
}

func (x *EnergyReportBuilding) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyReportBuilding) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *EnergyReportBuilding) GetEnergyValue() float32 {
	if x != nil {
		return x.EnergyValue
	}
	return 0
}

type ByHour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildingId string `protobuf:"bytes,1,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	Time       string `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *ByHour) Reset() {
	*x = ByHour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meter_reading_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByHour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByHour) ProtoMessage() {}

func (x *ByHour) ProtoReflect() protoreflect.Message {
	mi := &file_meter_reading_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByHour.ProtoReflect.Descriptor instead.
func (*ByHour) Descriptor() ([]byte, []int) {
	return file_meter_reading_proto_rawDescGZIP(), []int{3}
}

func (x *ByHour) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *ByHour) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

var File_meter_reading_proto protoreflect.FileDescriptor

var file_meter_reading_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x66, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x52,
	0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x6c, 0x0a, 0x14, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x06, 0x42, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x97, 0x04, 0x0a, 0x13,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x49,
	0x64, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x2e, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x75,
	0x72, 0x6c, 0x79, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x46, 0x6f, 0x72, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x48, 0x6f, 0x75, 0x72, 0x1a,
	0x27, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x46, 0x6f, 0x72, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x49, 0x64,
	0x1a, 0x27, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x22, 0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meter_reading_proto_rawDescOnce sync.Once
	file_meter_reading_proto_rawDescData = file_meter_reading_proto_rawDesc
)

func file_meter_reading_proto_rawDescGZIP() []byte {
	file_meter_reading_proto_rawDescOnce.Do(func() {
		file_meter_reading_proto_rawDescData = protoimpl.X.CompressGZIP(file_meter_reading_proto_rawDescData)
	})
	return file_meter_reading_proto_rawDescData
}

var file_meter_reading_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_meter_reading_proto_goTypes = []any{
	(*MeterReading)(nil),         // 0: energy_management.MeterReading
	(*MeterReadingUpdate)(nil),   // 1: energy_management.MeterReadingUpdate
	(*EnergyReportBuilding)(nil), // 2: energy_management.EnergyReportBuilding
	(*ByHour)(nil),               // 3: energy_management.ByHour
	(*ById)(nil),                 // 4: energy_management.ById
	(*Void)(nil),                 // 5: energy_management.Void
}
var file_meter_reading_proto_depIdxs = []int32{
	0, // 0: energy_management.MeterReadingService.CreateMeterReading:input_type -> energy_management.MeterReading
	4, // 1: energy_management.MeterReadingService.GetMeterReading:input_type -> energy_management.ById
	0, // 2: energy_management.MeterReadingService.UpdateMeterReading:input_type -> energy_management.MeterReading
	3, // 3: energy_management.MeterReadingService.GetHourlyEnergyForBuilding:input_type -> energy_management.ByHour
	4, // 4: energy_management.MeterReadingService.GetDailyEnergyForBuilding:input_type -> energy_management.ById
	4, // 5: energy_management.MeterReadingService.DeleteMeterReading:input_type -> energy_management.ById
	5, // 6: energy_management.MeterReadingService.CreateMeterReading:output_type -> energy_management.Void
	0, // 7: energy_management.MeterReadingService.GetMeterReading:output_type -> energy_management.MeterReading
	5, // 8: energy_management.MeterReadingService.UpdateMeterReading:output_type -> energy_management.Void
	2, // 9: energy_management.MeterReadingService.GetHourlyEnergyForBuilding:output_type -> energy_management.EnergyReportBuilding
	2, // 10: energy_management.MeterReadingService.GetDailyEnergyForBuilding:output_type -> energy_management.EnergyReportBuilding
	5, // 11: energy_management.MeterReadingService.DeleteMeterReading:output_type -> energy_management.Void
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meter_reading_proto_init() }
func file_meter_reading_proto_init() {
	if File_meter_reading_proto != nil {
		return
	}
	file_common5_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meter_reading_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MeterReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meter_reading_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MeterReadingUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meter_reading_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EnergyReportBuilding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meter_reading_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ByHour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meter_reading_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meter_reading_proto_goTypes,
		DependencyIndexes: file_meter_reading_proto_depIdxs,
		MessageInfos:      file_meter_reading_proto_msgTypes,
	}.Build()
	File_meter_reading_proto = out.File
	file_meter_reading_proto_rawDesc = nil
	file_meter_reading_proto_goTypes = nil
	file_meter_reading_proto_depIdxs = nil
}
