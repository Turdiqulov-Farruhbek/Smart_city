// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.12.4
// source: proposal_feedback.proto

package city_planning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackId   string `protobuf:"bytes,1,opt,name=FeedbackId,proto3" json:"FeedbackId,omitempty"`
	ProposalId   string `protobuf:"bytes,2,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	CitizenId    string `protobuf:"bytes,3,opt,name=CitizenId,proto3" json:"CitizenId,omitempty"`
	FeedbackText string `protobuf:"bytes,4,opt,name=FeedbackText,proto3" json:"FeedbackText,omitempty"`
	SubmittedAt  string `protobuf:"bytes,5,opt,name=SubmittedAt,proto3" json:"SubmittedAt,omitempty"`
	UpdatedAt    string `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt    string `protobuf:"bytes,7,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *ProposalFeedback) Reset() {
	*x = ProposalFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proposal_feedback_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalFeedback) ProtoMessage() {}

func (x *ProposalFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_feedback_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalFeedback.ProtoReflect.Descriptor instead.
func (*ProposalFeedback) Descriptor() ([]byte, []int) {
	return file_proposal_feedback_proto_rawDescGZIP(), []int{0}
}

func (x *ProposalFeedback) GetFeedbackId() string {
	if x != nil {
		return x.FeedbackId
	}
	return ""
}

func (x *ProposalFeedback) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *ProposalFeedback) GetCitizenId() string {
	if x != nil {
		return x.CitizenId
	}
	return ""
}

func (x *ProposalFeedback) GetFeedbackText() string {
	if x != nil {
		return x.FeedbackText
	}
	return ""
}

func (x *ProposalFeedback) GetSubmittedAt() string {
	if x != nil {
		return x.SubmittedAt
	}
	return ""
}

func (x *ProposalFeedback) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ProposalFeedback) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type ProposalFeedbackCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackId   string `protobuf:"bytes,1,opt,name=FeedbackId,proto3" json:"FeedbackId,omitempty"`
	ProposalId   string `protobuf:"bytes,2,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	CitizenId    string `protobuf:"bytes,3,opt,name=CitizenId,proto3" json:"CitizenId,omitempty"`
	FeedbackText string `protobuf:"bytes,4,opt,name=FeedbackText,proto3" json:"FeedbackText,omitempty"`
}

func (x *ProposalFeedbackCreate) Reset() {
	*x = ProposalFeedbackCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proposal_feedback_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalFeedbackCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalFeedbackCreate) ProtoMessage() {}

func (x *ProposalFeedbackCreate) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_feedback_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalFeedbackCreate.ProtoReflect.Descriptor instead.
func (*ProposalFeedbackCreate) Descriptor() ([]byte, []int) {
	return file_proposal_feedback_proto_rawDescGZIP(), []int{1}
}

func (x *ProposalFeedbackCreate) GetFeedbackId() string {
	if x != nil {
		return x.FeedbackId
	}
	return ""
}

func (x *ProposalFeedbackCreate) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *ProposalFeedbackCreate) GetCitizenId() string {
	if x != nil {
		return x.CitizenId
	}
	return ""
}

func (x *ProposalFeedbackCreate) GetFeedbackText() string {
	if x != nil {
		return x.FeedbackText
	}
	return ""
}

type ProposalFeedbackUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId   string `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	CitizenId    string `protobuf:"bytes,2,opt,name=CitizenId,proto3" json:"CitizenId,omitempty"`
	FeedbackText string `protobuf:"bytes,3,opt,name=FeedbackText,proto3" json:"FeedbackText,omitempty"`
}

func (x *ProposalFeedbackUpdate) Reset() {
	*x = ProposalFeedbackUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proposal_feedback_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalFeedbackUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalFeedbackUpdate) ProtoMessage() {}

func (x *ProposalFeedbackUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_feedback_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalFeedbackUpdate.ProtoReflect.Descriptor instead.
func (*ProposalFeedbackUpdate) Descriptor() ([]byte, []int) {
	return file_proposal_feedback_proto_rawDescGZIP(), []int{2}
}

func (x *ProposalFeedbackUpdate) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *ProposalFeedbackUpdate) GetCitizenId() string {
	if x != nil {
		return x.CitizenId
	}
	return ""
}

func (x *ProposalFeedbackUpdate) GetFeedbackText() string {
	if x != nil {
		return x.FeedbackText
	}
	return ""
}

type ProposalFeedbackList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feedbacks []*ProposalFeedback `protobuf:"bytes,1,rep,name=Feedbacks,proto3" json:"Feedbacks,omitempty"`
}

func (x *ProposalFeedbackList) Reset() {
	*x = ProposalFeedbackList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proposal_feedback_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalFeedbackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalFeedbackList) ProtoMessage() {}

func (x *ProposalFeedbackList) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_feedback_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalFeedbackList.ProtoReflect.Descriptor instead.
func (*ProposalFeedbackList) Descriptor() ([]byte, []int) {
	return file_proposal_feedback_proto_rawDescGZIP(), []int{3}
}

func (x *ProposalFeedbackList) GetFeedbacks() []*ProposalFeedback {
	if x != nil {
		return x.Feedbacks
	}
	return nil
}

type FeedbackFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedbackId   string `protobuf:"bytes,1,opt,name=FeedbackId,proto3" json:"FeedbackId,omitempty"`
	ProposalId   string `protobuf:"bytes,2,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	CitizenId    string `protobuf:"bytes,3,opt,name=CitizenId,proto3" json:"CitizenId,omitempty"`
	FeedbackText string `protobuf:"bytes,4,opt,name=FeedbackText,proto3" json:"FeedbackText,omitempty"`
}

func (x *FeedbackFilter) Reset() {
	*x = FeedbackFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proposal_feedback_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedbackFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedbackFilter) ProtoMessage() {}

func (x *FeedbackFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proposal_feedback_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedbackFilter.ProtoReflect.Descriptor instead.
func (*FeedbackFilter) Descriptor() ([]byte, []int) {
	return file_proposal_feedback_proto_rawDescGZIP(), []int{4}
}

func (x *FeedbackFilter) GetFeedbackId() string {
	if x != nil {
		return x.FeedbackId
	}
	return ""
}

func (x *FeedbackFilter) GetProposalId() string {
	if x != nil {
		return x.ProposalId
	}
	return ""
}

func (x *FeedbackFilter) GetCitizenId() string {
	if x != nil {
		return x.CitizenId
	}
	return ""
}

func (x *FeedbackFilter) GetFeedbackText() string {
	if x != nil {
		return x.FeedbackText
	}
	return ""
}

var File_proposal_feedback_proto protoreflect.FileDescriptor

var file_proposal_feedback_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x69, 0x74, 0x79, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x16,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65,
	0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x22, 0x7a, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x55, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x09,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x09, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0e,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74,
	0x32, 0xed, 0x02, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x13, 0x2e,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f,
	0x69, 0x64, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x25,
	0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x23, 0x2e, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x42, 0x19, 0x5a, 0x17, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proposal_feedback_proto_rawDescOnce sync.Once
	file_proposal_feedback_proto_rawDescData = file_proposal_feedback_proto_rawDesc
)

func file_proposal_feedback_proto_rawDescGZIP() []byte {
	file_proposal_feedback_proto_rawDescOnce.Do(func() {
		file_proposal_feedback_proto_rawDescData = protoimpl.X.CompressGZIP(file_proposal_feedback_proto_rawDescData)
	})
	return file_proposal_feedback_proto_rawDescData
}

var file_proposal_feedback_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proposal_feedback_proto_goTypes = []interface{}{
	(*ProposalFeedback)(nil),       // 0: city_planning.ProposalFeedback
	(*ProposalFeedbackCreate)(nil), // 1: city_planning.ProposalFeedbackCreate
	(*ProposalFeedbackUpdate)(nil), // 2: city_planning.ProposalFeedbackUpdate
	(*ProposalFeedbackList)(nil),   // 3: city_planning.ProposalFeedbackList
	(*FeedbackFilter)(nil),         // 4: city_planning.FeedbackFilter
	(*ById)(nil),                   // 5: city_planning.ById
	(*Void)(nil),                   // 6: city_planning.Void
}
var file_proposal_feedback_proto_depIdxs = []int32{
	0, // 0: city_planning.ProposalFeedbackList.Feedbacks:type_name -> city_planning.ProposalFeedback
	1, // 1: city_planning.ProposalFeedbackService.CreateProposalFeedback:input_type -> city_planning.ProposalFeedbackCreate
	1, // 2: city_planning.ProposalFeedbackService.UpdateProposalFeedback:input_type -> city_planning.ProposalFeedbackCreate
	5, // 3: city_planning.ProposalFeedbackService.DeleteProposalFeedback:input_type -> city_planning.ById
	4, // 4: city_planning.ProposalFeedbackService.GetProposalFeedbacks:input_type -> city_planning.FeedbackFilter
	6, // 5: city_planning.ProposalFeedbackService.CreateProposalFeedback:output_type -> city_planning.Void
	6, // 6: city_planning.ProposalFeedbackService.UpdateProposalFeedback:output_type -> city_planning.Void
	6, // 7: city_planning.ProposalFeedbackService.DeleteProposalFeedback:output_type -> city_planning.Void
	3, // 8: city_planning.ProposalFeedbackService.GetProposalFeedbacks:output_type -> city_planning.ProposalFeedbackList
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proposal_feedback_proto_init() }
func file_proposal_feedback_proto_init() {
	if File_proposal_feedback_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proposal_feedback_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proposal_feedback_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalFeedbackCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proposal_feedback_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalFeedbackUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proposal_feedback_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalFeedbackList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proposal_feedback_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedbackFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proposal_feedback_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proposal_feedback_proto_goTypes,
		DependencyIndexes: file_proposal_feedback_proto_depIdxs,
		MessageInfos:      file_proposal_feedback_proto_msgTypes,
	}.Build()
	File_proposal_feedback_proto = out.File
	file_proposal_feedback_proto_rawDesc = nil
	file_proposal_feedback_proto_goTypes = nil
	file_proposal_feedback_proto_depIdxs = nil
}
