// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: city_submodule/energy_management/energy_meter.proto

package energy_management

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnergyMeterCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId    string `protobuf:"bytes,1,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	BuildingId string `protobuf:"bytes,2,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	MeterType  string `protobuf:"bytes,3,opt,name=MeterType,proto3" json:"MeterType,omitempty"`
}

func (x *EnergyMeterCreate) Reset() {
	*x = EnergyMeterCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyMeterCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyMeterCreate) ProtoMessage() {}

func (x *EnergyMeterCreate) ProtoReflect() protoreflect.Message {
	mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyMeterCreate.ProtoReflect.Descriptor instead.
func (*EnergyMeterCreate) Descriptor() ([]byte, []int) {
	return file_city_submodule_energy_management_energy_meter_proto_rawDescGZIP(), []int{0}
}

func (x *EnergyMeterCreate) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *EnergyMeterCreate) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyMeterCreate) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

type EnergyMeterUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId    string `protobuf:"bytes,1,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	BuildingId string `protobuf:"bytes,2,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	MeterType  string `protobuf:"bytes,3,opt,name=MeterType,proto3" json:"MeterType,omitempty"`
}

func (x *EnergyMeterUpdate) Reset() {
	*x = EnergyMeterUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyMeterUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyMeterUpdate) ProtoMessage() {}

func (x *EnergyMeterUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyMeterUpdate.ProtoReflect.Descriptor instead.
func (*EnergyMeterUpdate) Descriptor() ([]byte, []int) {
	return file_city_submodule_energy_management_energy_meter_proto_rawDescGZIP(), []int{1}
}

func (x *EnergyMeterUpdate) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *EnergyMeterUpdate) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyMeterUpdate) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

type EnergyMeter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeterId    string `protobuf:"bytes,1,opt,name=MeterId,proto3" json:"MeterId,omitempty"`
	BuildingId string `protobuf:"bytes,2,opt,name=BuildingId,proto3" json:"BuildingId,omitempty"`
	MeterType  string `protobuf:"bytes,3,opt,name=MeterType,proto3" json:"MeterType,omitempty"`
	CreatedAt  string `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt  string `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	DeletedAt  string `protobuf:"bytes,6,opt,name=DeletedAt,proto3" json:"DeletedAt,omitempty"`
}

func (x *EnergyMeter) Reset() {
	*x = EnergyMeter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyMeter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyMeter) ProtoMessage() {}

func (x *EnergyMeter) ProtoReflect() protoreflect.Message {
	mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyMeter.ProtoReflect.Descriptor instead.
func (*EnergyMeter) Descriptor() ([]byte, []int) {
	return file_city_submodule_energy_management_energy_meter_proto_rawDescGZIP(), []int{2}
}

func (x *EnergyMeter) GetMeterId() string {
	if x != nil {
		return x.MeterId
	}
	return ""
}

func (x *EnergyMeter) GetBuildingId() string {
	if x != nil {
		return x.BuildingId
	}
	return ""
}

func (x *EnergyMeter) GetMeterType() string {
	if x != nil {
		return x.MeterType
	}
	return ""
}

func (x *EnergyMeter) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *EnergyMeter) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *EnergyMeter) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type GetEnergyWithBuildings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meter    *EnergyMeter `protobuf:"bytes,1,opt,name=meter,proto3" json:"meter,omitempty"`
	Building *Building    `protobuf:"bytes,2,opt,name=building,proto3" json:"building,omitempty"`
}

func (x *GetEnergyWithBuildings) Reset() {
	*x = GetEnergyWithBuildings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnergyWithBuildings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnergyWithBuildings) ProtoMessage() {}

func (x *GetEnergyWithBuildings) ProtoReflect() protoreflect.Message {
	mi := &file_city_submodule_energy_management_energy_meter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnergyWithBuildings.ProtoReflect.Descriptor instead.
func (*GetEnergyWithBuildings) Descriptor() ([]byte, []int) {
	return file_city_submodule_energy_management_energy_meter_proto_rawDescGZIP(), []int{3}
}

func (x *GetEnergyWithBuildings) GetMeter() *EnergyMeter {
	if x != nil {
		return x.Meter
	}
	return nil
}

func (x *GetEnergyWithBuildings) GetBuilding() *Building {
	if x != nil {
		return x.Building
	}
	return nil
}

var File_city_submodule_energy_management_energy_meter_proto protoreflect.FileDescriptor

var file_city_submodule_energy_management_energy_meter_proto_rawDesc = []byte{
	0x0a, 0x33, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x2f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x2d, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x73,
	0x75, 0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x75,
	0x62, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x11, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x11, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d,
	0x65, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x34, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x05,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x32, 0xf0,
	0x02, 0x0a, 0x13, 0x45, 0x6e, 0x65, 0x6e, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0x1e, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65,
	0x72, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x1e,
	0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x47, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x17,
	0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x29, 0x2e, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x57, 0x69, 0x74, 0x68, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_city_submodule_energy_management_energy_meter_proto_rawDescOnce sync.Once
	file_city_submodule_energy_management_energy_meter_proto_rawDescData = file_city_submodule_energy_management_energy_meter_proto_rawDesc
)

func file_city_submodule_energy_management_energy_meter_proto_rawDescGZIP() []byte {
	file_city_submodule_energy_management_energy_meter_proto_rawDescOnce.Do(func() {
		file_city_submodule_energy_management_energy_meter_proto_rawDescData = protoimpl.X.CompressGZIP(file_city_submodule_energy_management_energy_meter_proto_rawDescData)
	})
	return file_city_submodule_energy_management_energy_meter_proto_rawDescData
}

var file_city_submodule_energy_management_energy_meter_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_city_submodule_energy_management_energy_meter_proto_goTypes = []any{
	(*EnergyMeterCreate)(nil),      // 0: energy_management.EnergyMeterCreate
	(*EnergyMeterUpdate)(nil),      // 1: energy_management.EnergyMeterUpdate
	(*EnergyMeter)(nil),            // 2: energy_management.EnergyMeter
	(*GetEnergyWithBuildings)(nil), // 3: energy_management.GetEnergyWithBuildings
	(*Building)(nil),               // 4: energy_management.Building
	(*ById)(nil),                   // 5: energy_management.ById
	(*Void)(nil),                   // 6: energy_management.Void
}
var file_city_submodule_energy_management_energy_meter_proto_depIdxs = []int32{
	2, // 0: energy_management.GetEnergyWithBuildings.meter:type_name -> energy_management.EnergyMeter
	4, // 1: energy_management.GetEnergyWithBuildings.building:type_name -> energy_management.Building
	0, // 2: energy_management.EnenrgyMeterService.CreateEnergyMeter:input_type -> energy_management.EnergyMeterCreate
	1, // 3: energy_management.EnenrgyMeterService.UpdateEnergyMeter:input_type -> energy_management.EnergyMeterUpdate
	5, // 4: energy_management.EnenrgyMeterService.DeleteEnergyMeter:input_type -> energy_management.ById
	5, // 5: energy_management.EnenrgyMeterService.GetEnergyMeter:input_type -> energy_management.ById
	2, // 6: energy_management.EnenrgyMeterService.CreateEnergyMeter:output_type -> energy_management.EnergyMeter
	2, // 7: energy_management.EnenrgyMeterService.UpdateEnergyMeter:output_type -> energy_management.EnergyMeter
	6, // 8: energy_management.EnenrgyMeterService.DeleteEnergyMeter:output_type -> energy_management.Void
	3, // 9: energy_management.EnenrgyMeterService.GetEnergyMeter:output_type -> energy_management.GetEnergyWithBuildings
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_city_submodule_energy_management_energy_meter_proto_init() }
func file_city_submodule_energy_management_energy_meter_proto_init() {
	if File_city_submodule_energy_management_energy_meter_proto != nil {
		return
	}
	file_city_submodule_energy_management_common_proto_init()
	file_city_submodule_energy_management_building_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_city_submodule_energy_management_energy_meter_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EnergyMeterCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_submodule_energy_management_energy_meter_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EnergyMeterUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_submodule_energy_management_energy_meter_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EnergyMeter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_city_submodule_energy_management_energy_meter_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetEnergyWithBuildings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_city_submodule_energy_management_energy_meter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_submodule_energy_management_energy_meter_proto_goTypes,
		DependencyIndexes: file_city_submodule_energy_management_energy_meter_proto_depIdxs,
		MessageInfos:      file_city_submodule_energy_management_energy_meter_proto_msgTypes,
	}.Build()
	File_city_submodule_energy_management_energy_meter_proto = out.File
	file_city_submodule_energy_management_energy_meter_proto_rawDesc = nil
	file_city_submodule_energy_management_energy_meter_proto_goTypes = nil
	file_city_submodule_energy_management_energy_meter_proto_depIdxs = nil
}
